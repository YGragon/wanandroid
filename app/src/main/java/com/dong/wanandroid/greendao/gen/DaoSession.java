package com.dong.wanandroid.greendao.gen;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.dong.wanandroid.data.banner.Banner;
import com.dong.wanandroid.data.home.HomeArticleModel;
import com.dong.wanandroid.data.read_record.ReadRecordModel;
import com.dong.wanandroid.data.search.SearchModel;
import com.dong.wanandroid.data.user.UserModel;
import com.dong.wanandroid.data.welfare.WelfareModel;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig bannerDaoConfig;
    private final DaoConfig homeArticleModelDaoConfig;
    private final DaoConfig readRecordModelDaoConfig;
    private final DaoConfig searchModelDaoConfig;
    private final DaoConfig userModelDaoConfig;
    private final DaoConfig welfareModelDaoConfig;

    private final BannerDao bannerDao;
    private final HomeArticleModelDao homeArticleModelDao;
    private final ReadRecordModelDao readRecordModelDao;
    private final SearchModelDao searchModelDao;
    private final UserModelDao userModelDao;
    private final WelfareModelDao welfareModelDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        bannerDaoConfig = daoConfigMap.get(BannerDao.class).clone();
        bannerDaoConfig.initIdentityScope(type);

        homeArticleModelDaoConfig = daoConfigMap.get(HomeArticleModelDao.class).clone();
        homeArticleModelDaoConfig.initIdentityScope(type);

        readRecordModelDaoConfig = daoConfigMap.get(ReadRecordModelDao.class).clone();
        readRecordModelDaoConfig.initIdentityScope(type);

        searchModelDaoConfig = daoConfigMap.get(SearchModelDao.class).clone();
        searchModelDaoConfig.initIdentityScope(type);

        userModelDaoConfig = daoConfigMap.get(UserModelDao.class).clone();
        userModelDaoConfig.initIdentityScope(type);

        welfareModelDaoConfig = daoConfigMap.get(WelfareModelDao.class).clone();
        welfareModelDaoConfig.initIdentityScope(type);

        bannerDao = new BannerDao(bannerDaoConfig, this);
        homeArticleModelDao = new HomeArticleModelDao(homeArticleModelDaoConfig, this);
        readRecordModelDao = new ReadRecordModelDao(readRecordModelDaoConfig, this);
        searchModelDao = new SearchModelDao(searchModelDaoConfig, this);
        userModelDao = new UserModelDao(userModelDaoConfig, this);
        welfareModelDao = new WelfareModelDao(welfareModelDaoConfig, this);

        registerDao(Banner.class, bannerDao);
        registerDao(HomeArticleModel.class, homeArticleModelDao);
        registerDao(ReadRecordModel.class, readRecordModelDao);
        registerDao(SearchModel.class, searchModelDao);
        registerDao(UserModel.class, userModelDao);
        registerDao(WelfareModel.class, welfareModelDao);
    }
    
    public void clear() {
        bannerDaoConfig.clearIdentityScope();
        homeArticleModelDaoConfig.clearIdentityScope();
        readRecordModelDaoConfig.clearIdentityScope();
        searchModelDaoConfig.clearIdentityScope();
        userModelDaoConfig.clearIdentityScope();
        welfareModelDaoConfig.clearIdentityScope();
    }

    public BannerDao getBannerDao() {
        return bannerDao;
    }

    public HomeArticleModelDao getHomeArticleModelDao() {
        return homeArticleModelDao;
    }

    public ReadRecordModelDao getReadRecordModelDao() {
        return readRecordModelDao;
    }

    public SearchModelDao getSearchModelDao() {
        return searchModelDao;
    }

    public UserModelDao getUserModelDao() {
        return userModelDao;
    }

    public WelfareModelDao getWelfareModelDao() {
        return welfareModelDao;
    }

}
